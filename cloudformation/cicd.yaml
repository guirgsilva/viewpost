AWSTemplateFormatVersion: '2010-09-09'
Description: 'CI/CD Pipeline with GitHub integration and Multiple Phases'

Parameters:
  GitHubOwner:
    Type: String
    Default: "guirgsilva"
    Description: "GitHub repository owner"
  
  GitHubRepo:
    Type: String
    Default: "viewpost"
    Description: "GitHub repository name"
  
  GitHubBranch:
    Type: String
    Default: "master"
    Description: "GitHub branch name"
  
  GitHubTokenSecretName:
    Type: String
    Default: "github/aws-token"
    Description: "Name of the secret containing GitHub OAuth token"

Resources:
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # Install Phase Project
  InstallProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-Install
      Description: "Install dependencies for Python application"
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: ARM_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-aarch64-standard:2.0
        EnvironmentVariables:
          - Name: PYTHONPATH
            Value: /usr/local/lib/python3.8/site-packages
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml

  # Test Phase Project
  TestProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-Test
      Description: "Run tests for Python application"
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: ARM_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-aarch64-standard:2.0
        EnvironmentVariables:
          - Name: PYTHONPATH
            Value: /usr/local/lib/python3.8/site-packages
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-test.yml

  # Build Phase Project
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-Build
      Description: "Build Python application"
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: ARM_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-aarch64-standard:2.0
        EnvironmentVariables:
          - Name: PYTHONPATH
            Value: /usr/local/lib/python3.8/site-packages
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-build.yml

  # Security Phase Project
  SecurityProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-Security
      Description: "Security checks for Python application"
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: ARM_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-aarch64-standard:2.0
        EnvironmentVariables:
          - Name: PYTHONPATH
            Value: /usr/local/lib/python3.8/site-packages
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-security.yml

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Sub '{{resolve:secretsmanager:${GitHubTokenSecretName}:SecretString:token}}'
              OutputArtifacts:
                - Name: SourceCode
              RunOrder: 1

        - Name: Install
          Actions:
            - Name: Install
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref InstallProject
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: InstalledCode
              RunOrder: 1

        - Name: Test
          Actions:
            - Name: Test
              ActionTypeId:
                Category: Test
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref TestProject
              InputArtifacts:
                - Name: InstalledCode
              OutputArtifacts:
                - Name: TestedCode
              RunOrder: 1

        - Name: SecurityCheck
          Actions:
            - Name: Security
              ActionTypeId:
                Category: Test
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref SecurityProject
              InputArtifacts:
                - Name: TestedCode
              OutputArtifacts:
                - Name: SecurityCheckedCode
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: SecurityCheckedCode
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                Resource: 
                  - !GetAtt PipelineArtifactsBucket.Arn
                  - !Sub '${PipelineArtifactsBucket.Arn}/*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuildBatches'
                  - 'codebuild:StartBuildBatch'
                Resource:
                  - !GetAtt InstallProject.Arn
                  - !GetAtt TestProject.Arn
                  - !GetAtt SecurityProject.Arn
                  - !GetAtt BuildProject.Arn
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${GitHubTokenSecretName}*'

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-*:*'
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetObjectVersion'
                Resource: 
                  - !GetAtt PipelineArtifactsBucket.Arn
                  - !Sub '${PipelineArtifactsBucket.Arn}/*'

Outputs:
  PipelineURL:
    Description: CodePipeline URL
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${CodePipeline}
  
  InstallProjectURL:
    Description: Install Project URL
    Value: !Sub https://console.aws.amazon.com/codesuite/codebuild/${AWS::AccountId}/projects/${InstallProject}
  
  TestProjectURL:
    Description: Test Project URL
    Value: !Sub https://console.aws.amazon.com/codesuite/codebuild/${AWS::AccountId}/projects/${TestProject}
  
  SecurityProjectURL:
    Description: Security Project URL
    Value: !Sub https://console.aws.amazon.com/codesuite/codebuild/${AWS::AccountId}/projects/${SecurityProject}
  
  BuildProjectURL:
    Description: Build Project URL
    Value: !Sub https://console.aws.amazon.com/codesuite/codebuild/${AWS::AccountId}/projects/${BuildProject}